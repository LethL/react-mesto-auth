{"ast":null,"code":"class Api {\n  constructor(option) {\n    this._url = option.url;\n    this._headers = option.headers;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  likeCard(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  dislikeCard(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  editAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-41',\n  headers: {\n    authorization: '34ba8aa0-fdc8-4f70-8c18-1ea7527a281e',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","option","_url","url","_headers","headers","_handleResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","getInitialCards","editUserInfo","data","body","JSON","stringify","name","about","addCard","link","deleteCard","id","likeCard","dislikeCard","editAvatar","avatar","api","authorization"],"sources":["/Users/dmitry/Desktop/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(option) {\n        this._url = option.url;\n        this._headers = option.headers;\n    }\n\n    _handleResponse(res) {\n        if (res.ok) {\n          return res.json()\n        }\n        return Promise.reject(`Ошибка: ${res.status}`)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            method: 'GET',\n            headers: this._headers\n        }).then((res) => {\n            return this._handleResponse(res)\n        })\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this._headers\n        }).then((res) => {\n            return this._handleResponse(res)\n        })\n    }\n\n    editUserInfo(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        }).then((res) => {\n            return this._handleResponse(res)\n        })\n    }\n\n    addCard(data) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        }).then((res) => {\n            return this._handleResponse(res)\n        })\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._url}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers\n        }).then((res) => {\n            return this._handleResponse(res)\n        })\n    }\n\n    likeCard(id) {\n        return fetch(`${this._url}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this._headers\n        }).then((res) => {\n            return this._handleResponse(res)\n        })\n    }\n    \n    dislikeCard(id) {\n        return fetch(`${this._url}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this._headers\n        }).then((res) => {\n            return this._handleResponse(res)\n        })\n    }\n\n    editAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.link\n            })\n        }).then((res) => {\n            return this._handleResponse(res)\n        })\n    }\n}\n\nconst api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-41',\n    headers: {\n      authorization: '34ba8aa0-fdc8-4f70-8c18-1ea7527a281e',\n      'Content-Type': 'application/json'\n    }\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}